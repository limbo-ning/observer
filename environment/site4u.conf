lua_shared_dict csites 10m;
lua_shared_dict bans 5m;

server {
	listen 80 default_server;
    server_name ~^([^\.]*)?(\.?.*\.)?(site4u.design)$;

    set_by_lua $csite '
        local csite = ngx.arg[1]

	ngx.log(ngx.ERR, " arg 1: ", ngx.arg[1], " arg 2: ", ngx.arg[2], " arg 3: ", ngx.arg[3])

        local m, err = ngx.re.match(ngx.var.uri, "/projectc/v1/internal")
        if m then 
            csite = "c"
            return csite
        end

        if ngx.arg[3] == "site4u.design" then
            if ngx.arg[2] == ".wx." or ngx.arg[1] == "wx" then
		local query = ngx.req.get_uri_args()
		if query["proxySiteID"] ~= nil then
		    csite = query["proxySiteID"]
		else
		    csite = "wechat"
		end
	    elseif ngx.arg[2] == ".alipay." or ngx.arg[1] == "alipay" then
		csite = "alipay"
	    elseif ngx.arg[1] == "" then
                csite = "c"
            end
        else
            csite = ngx.shared.csites:get(ngx.var.http_host);
            if csite == nil then
                csite = ""
            end
        end

        return csite
    ' $1 $2 $3;


    rewrite_by_lua '

	ngx.log(ngx.ERR, " csite: ", ngx.var.csite)
        if ngx.var.csite == "" then

            baned = ngx.shared.bans:get(ngx.var.http_host);
            if baned ~= nil then
                ngx.exit(ngx.HTTP_FORBIDDEN)
            else
                local cjson = require "cjson"
                local res = ngx.location.capture("/projectc/v1/internal/site/checkCname?cname=" .. ngx.var.http_host)

                if res.status ~= ngx.HTTP_OK then
                    ngx.exit(res.status)
                end

                local json = cjson.decode(res.body)
                if json["retCode"] == 0 then
                    csite = json["siteID"]
                    ngx.shared.csites:set(ngx.var.http_host, csite, 7200);
                    ngx.var.csite = csite
                else
                    ngx.shared.bans:set(ngx.var.http_host, "1", 600);
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                end
            end
        end
    ';

	root /web/projectc_export/$csite;
	location / {
		#try_files $uri $uri/index.html @webpage;
		try_files $uri $uri/index.html 404;
	}

	location @webpage {
		return 301 http://site4u.design;
	}

	location ~ /beta/websocket {
                proxy_pass http://172.17.162.42:80;
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Allow-Credentials' 'true';
		proxy_set_header   X-Real-IP   $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header Scheme $scheme;                

		proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
		proxy_set_header Origin "";
        }

 	location ~ /beta/ {
		if ( $request_method = 'OPTIONS' ) { 
			add_header Access-Control-Allow-Origin $http_origin; 
			add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With,X-Openapi-Username,X-Openapi-Sign; 
			add_header Access-Control-Allow-Methods GET,POST,OPTIONS; 
			add_header Access-Control-Allow-Credentials true;
			return 200; 
		}

                proxy_pass      http://172.17.162.42:80;
		proxy_set_header   X-Real-IP   $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header Scheme $scheme;
        }

	location /projectc/v1/websocket {

		set $args "${args}&csite=${csite}";
                if ($args = "&csite=${csite}") {
                        set $args "csite=${csite}";
                }
	
                proxy_pass http://172.18.0.1:9900;
                add_header 'Access-Control-Allow-Origin' $http_origin;
                add_header 'Access-Control-Allow-Credentials' 'true';
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
		proxy_set_header Origin "";
	}

	location /projectc/ {

		if ( $request_method = 'OPTIONS' ) { 
			add_header Access-Control-Allow-Origin $http_origin; 
			add_header Access-Control-Allow-Headers Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,X-Data-Type,X-Requested-With; 
			add_header Access-Control-Allow-Methods GET,POST,OPTIONS; 
			add_header Access-Control-Allow-Credentials true;
			return 200; 
		}

        	set $args "${args}&csite=${csite}";
		if ($args = "&csite=${csite}") {
			set $args "csite=${csite}"; 
		}
	
        	proxy_pass   http://172.18.0.1:9900;
        	proxy_set_header   X-Real-IP   $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	add_header 'Access-Control-Allow-Origin' $http_origin;
        	add_header 'Access-Control-Allow-Credentials' 'true';
    	}

	location /cstatic/ {
		alias /web/projectc_resource/$csite/;
		add_header 'Access-Control-Allow-Origin' $http_origin;
	}

	location /portal {
		alias /web/projectc_export/portal/;
		index index.html;
		add_header 'X-Csite-Id' $csite;
		add_header 'Access-Control-Allow-Headers' 'X-Csite-Id'; 
		add_header 'Access-Control-Allow-Expose-Headers' 'X-Csite-Id';
	}

}